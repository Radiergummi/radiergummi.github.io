<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on Moritz Friedrich</title><link>https://www.moritzfriedrich.com/</link><description>Recent content in Home on Moritz Friedrich</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 13 Jan 2020 20:43:19 +0100</lastBuildDate><atom:link href="https://www.moritzfriedrich.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Massively Parallel PHP</title><link>https://www.moritzfriedrich.com/projects/massively-parallel-php/</link><pubDate>Mon, 29 Jun 2020 12:35:04 +0200</pubDate><guid>https://www.moritzfriedrich.com/projects/massively-parallel-php/</guid><description>Whoops! Sorry, I&amp;rsquo;m still working on that one. Check back later!</description></item><item><title>Taking user feedback seriously</title><link>https://www.moritzfriedrich.com/posts/user-feedback/</link><pubDate>Sat, 20 Jun 2020 12:03:35 +0200</pubDate><guid>https://www.moritzfriedrich.com/posts/user-feedback/</guid><description>Recently, I got annoyed with the way we handle support in some cases. Users write emails or send messages via instant messaging apps, which end up in some ticket system, get assigned a priority and will be forwarded as a ticket to a support employee. Maybe they don&amp;rsquo;t have time right away because they are busy or on vacation or don&amp;rsquo;t like the customer or simply aren&amp;rsquo;t too motivated that day.</description></item><item><title>Application Framework</title><link>https://www.moritzfriedrich.com/projects/application-framework/</link><pubDate>Tue, 17 Mar 2020 10:13:38 +0100</pubDate><guid>https://www.moritzfriedrich.com/projects/application-framework/</guid><description>Driven by the need to reuse domain-specific code, I started working on a unified base framework for every application we run. At the time of writing, this amounts to 37 individual services, both console and web applications.
Before the lamentation starts, let me be clear on one important point: I did not build a fresh framework, of course! There&amp;rsquo;s lots of smarter people than me who have put a lot of thought into existing options.</description></item><item><title>Internal CLI</title><link>https://www.moritzfriedrich.com/projects/cli/</link><pubDate>Tue, 17 Mar 2020 10:12:39 +0100</pubDate><guid>https://www.moritzfriedrich.com/projects/cli/</guid><description>As a company grows, its infrastructure grows with it. This makes it more and more unwieldy to manage all tools involved: Status dashboards, the company CRM, cloud provider control panels and home-grown software are all required to keep the business running, and everything needs to more or less work. Sometimes, there&amp;rsquo;s a database query nobody ever cared enough about to build an interface for it: Say, archiving a customer, or checking the activity status of a bunch of customers by some arcane filter.</description></item><item><title>Rabbit MQ</title><link>https://www.moritzfriedrich.com/projects/rabbitmq/</link><pubDate>Tue, 17 Mar 2020 10:11:59 +0100</pubDate><guid>https://www.moritzfriedrich.com/projects/rabbitmq/</guid><description>Whoops! Sorry, I&amp;rsquo;m still working on that one. Check back later!</description></item><item><title>Curriculum Vitae</title><link>https://www.moritzfriedrich.com/cv/</link><pubDate>Mon, 16 Mar 2020 19:59:40 +0100</pubDate><guid>https://www.moritzfriedrich.com/cv/</guid><description>Professional experience Engineering Lead MessengerPeople Jan 2020 &amp;hairsp;&amp;ndash;&amp;hairsp; today As the project lead of the Unified Messaging API, I&amp;rsquo;m product owner, core contributor and coordinate sales and marketing decisions across the company. Originally, I built the system from scratch in tandem with our CTO @MaxTietz, taking care to design a fully scalable automation solution.
Over time, I have worked on several interesting projects here.
Software Engineer MessengerPeople Aug 2018 &amp;hairsp;&amp;ndash;&amp;hairsp; Jan 2020 As a software engineer, I was working on a multitude of projects, including things like the most complex chatbot we ever built, bringing modern PHP to existing applications or slowly migrating the entire tech stack to Kubernetes.</description></item><item><title>Automatically deployed feature branch previews</title><link>https://www.moritzfriedrich.com/posts/feature-branch-previews/</link><pubDate>Sat, 14 Mar 2020 13:12:20 +0100</pubDate><guid>https://www.moritzfriedrich.com/posts/feature-branch-previews/</guid><description>Automatically deployed feature branch previews At MessengerPeople , we have employed a pretty strict branching schema:
/───fix/foo──o──\ / \ / \ master ━━┯━━━x━━━━x━━━━━━━━━━━━━━━━━━━━━x━━┯━━━━━━━━━━━━x━━┯━━━━━━━━━ │ \ │ / │ │ \ │ / │ │ \───feature/bar─o─o─o────o─│───o──o──/ │ │ │ │ v1.24.8 v1.24.9 v1.25.0 x: Merge/Branch o: Commit There&amp;rsquo;s a single branch and source of truth, which is master. Every Release is a tag on master, every new development takes place in a new branch.</description></item><item><title>Embracing Imperfection</title><link>https://www.moritzfriedrich.com/posts/embracing-imperfection/</link><pubDate>Tue, 28 Jan 2020 10:54:09 +0100</pubDate><guid>https://www.moritzfriedrich.com/posts/embracing-imperfection/</guid><description>Ah, source code. Usually, and especially if written by someone else, it&amp;rsquo;s awful . If you suffer from even a slight proclivity to perfectionism, you will inevitably try to refactor it. While doing so, you will equally inevitably realize there&amp;rsquo;s even bigger fruits to reap a little further up, and before you know it you&amp;rsquo;re rewriting the entire application. Now, the younger me might have said, &amp;ldquo;obviously that was necessary!&amp;rdquo;, utterly ignoring the fact that the end result performs equally well at best, with a ridiculous amount of time having been wasted on playing a zero-sum game.</description></item><item><title>Simple Cronjobs for CLI apps using systemd</title><link>https://www.moritzfriedrich.com/posts/php-cronjobs/</link><pubDate>Thu, 16 Jan 2020 13:29:13 +0100</pubDate><guid>https://www.moritzfriedrich.com/posts/php-cronjobs/</guid><description>Most applications will need some kind of asynchronous processing happening in the background: Calculating statistics, sending emails or processing large files. These tasks are probably abstracted into some kind of job queue, ready to be fetched by a worker.
Now, whenever you want to perform a task in regular intervals (say: Calculating monthly billing positions and sending them to Stripe for invoicing), you need some kind of scheduler. The most straightforward and probably most common solution is to simply create a cron job.</description></item><item><title>Privacy Policy</title><link>https://www.moritzfriedrich.com/privacy/</link><pubDate>Mon, 13 Jan 2020 22:29:58 +0100</pubDate><guid>https://www.moritzfriedrich.com/privacy/</guid><description>Preface The following text is only available in German for now, since its required by law around here, and I lack the resources to let a lawyer translate it to english. Therefore, I&amp;rsquo;ve tried my best to sum up all those useless paragraphs in simple english below.
Summary I use Cloudflare to improve performance and GitHub Pages to host the site. In fact, it&amp;rsquo;s all openly available here: github.</description></item><item><title>Imprint</title><link>https://www.moritzfriedrich.com/imprint/</link><pubDate>Mon, 13 Jan 2020 22:11:55 +0100</pubDate><guid>https://www.moritzfriedrich.com/imprint/</guid><description>Responsible for the content of this website Moritz Friedrich
Wolfratshauserstraße 102
81379 Munich, Germany
Mail: kontakt@moritzfriedrich.com</description></item><item><title>Hello World!</title><link>https://www.moritzfriedrich.com/posts/hello-world/</link><pubDate>Mon, 13 Jan 2020 20:54:44 +0100</pubDate><guid>https://www.moritzfriedrich.com/posts/hello-world/</guid><description>Hello darkness, my old friend&amp;hellip;
This is not the first time I&amp;rsquo;m attempting to write regularly. As it usually happens, you start enthusiastically with a thought or twice at the edge of your brain, eager to be put in words, thinking &amp;ldquo;Oh yeah! This time, I&amp;rsquo;m going to do it! I&amp;rsquo;m finally making a blog!&amp;quot; &amp;ndash; until you actually start doing so.
Now, in my previous attempts, one of two things might happen:</description></item><item><title>About Me</title><link>https://www.moritzfriedrich.com/about/</link><pubDate>Mon, 13 Jan 2020 20:39:42 +0100</pubDate><guid>https://www.moritzfriedrich.com/about/</guid><description>Hi! I&amp;rsquo;m Moritz, a full-stack developer with a focus on the backend side of things. Currently, I&amp;rsquo;m working for MessengerPeople , a startup from Munich, as the head honcho of the Messaging API .
At MessengerPeople, I&amp;rsquo;ve got the opportunity to work on and lead several super interesting projects on the bleeding edge of technology. That includes migrating the existing, legacy PHP (5.6) stack with a homegrown framework onto a solid foundation: After lots of pain and sweat and tears, we&amp;rsquo;re now proud (product) owners of a Kubernetes setup with modern PHP (&amp;gt;=7.</description></item></channel></rss>